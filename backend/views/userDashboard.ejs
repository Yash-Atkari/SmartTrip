<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Tourist Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body class="bg-light">

  <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">SmartTrip</a>
    <div class="d-flex">
      <form action="/api/auth/logout" method="POST" class="d-inline">
        <button type="submit" class="btn btn-outline-light">Logout</button>
      </form>
    </div>
  </div>
</nav>

  <div class="container mt-4">
    <h2 class="mb-4">Welcome, <%= user.email %> üëã</h2>

    <!-- Digital ID -->
    <div class="alert alert-info">
      <strong>Your Digital ID:</strong> <%= user.digitalId %>
    </div>

    <div class="card mb-4">
      <div class="card-body">
        <h4>SOS</h4>
        <p>If you feel unsafe, trigger an SOS alert.</p>

        <form id="sosForm" action="/api/sos/raise" method="POST">
          <input type="hidden" name="userId" value="<%= user._id %>">
          <input type="hidden" id="lat" name="lat">
          <input type="hidden" id="lng" name="lng">

          <!-- Share location first -->
          <button type="button" id="shareLocationBtn" class="btn btn-primary">
            Share My Location
          </button>

          <!-- Only enable SOS after location shared -->
          <button type="submit" id="sosBtn" class="btn btn-danger" disabled>
            Send SOS üö®
          </button>
        </form>
      </div>
    </div>

    <div class="card mb-4">
      <div class="card-body">
        <h4>Current Weather</h4>
        <p>Check the current weather of your location.</p>
        <button id="weatherBtn" class="btn btn-info">Check Weather</button>
        <div id="weatherInfo" class="mt-3"></div>
      </div>
    </div>

    <!-- Safe Zone -->
    <div class="card mb-4">
      <div class="card-body">
        <h4>Safe Zone Check</h4>

        <p id="safeResult" class="mt-3 text-muted"></p>

        <button id="checkSafeBtn" class="btn btn-success">
          Am I Safe?
        </button>
        
        <!-- Hidden fields (if you still need them for SOS form later) -->
        <input type="hidden" id="lat" name="lat">
        <input type="hidden" id="lng" name="lng">
      </div>
    </div>

    <!-- My Incidents -->
    <div class="card">
      <div class="card-body">
        <h4>My Incidents</h4>
        <% if (incidents.length === 0) { %>
          <p>No incidents reported yet.</p>
        <% } else { %>
          <ul class="list-group">
            <% incidents.forEach((incident, idx) => { %>
              <li class="list-group-item d-flex justify-content-between">
                <span><%= idx %> <%= incident.type %> - <%= incident.description %></span>
                <span class="badge bg-<%= incident.status === 'open' ? 'danger' : 'success' %>">
                  <%= incident.status %>
                </span>
              </li>
            <% }) %>
          </ul>
        <% } %>
      </div>
    </div>
  </div>
  <script>
    document.getElementById("shareLocationBtn").addEventListener("click", async () => {
      try {
        // 1. Check if browser supports geolocation
        if (!navigator.geolocation) {
          alert("‚ùå Geolocation not supported in this browser.");
          return;
        }

        // 2. Ask for geolocation permission status
        const permissionStatus = await navigator.permissions.query({ name: "geolocation" });

        if (permissionStatus.state === "denied") {
          alert("‚ùå Location permission is blocked. Please enable it in browser settings.");
          return;
        }

        // 3. Request current position
        navigator.geolocation.getCurrentPosition(
          (pos) => {
            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;

            // Store in hidden inputs
            document.getElementById("lat").value = lat;
            document.getElementById("lng").value = lng;

            // Change button state
            const shareBtn = document.getElementById("shareLocationBtn");
            shareBtn.textContent = "Location Shared";
            shareBtn.classList.replace("btn-primary", "btn-success");
            shareBtn.disabled = true;

            // Enable SOS button
            document.getElementById("sosBtn").disabled = false;
          },
          (err) => {
            if (err.code === err.PERMISSION_DENIED) {
              alert("‚ùå You denied location access. SOS cannot be raised.");
            } else {
              alert("‚ùå Could not fetch location. Please enable GPS.");
            }
            console.error(err);
          }
        );
      } catch (err) {
        console.error("Error checking geolocation permission:", err);
        alert("‚ùå Something went wrong while requesting location.");
      }
    });
  </script>
  <script>
    const safeLocations = [
      { name: "Hotel GreenTree", lat: 22.7205, lng: 75.8572 },
      { name: "Police Station Central", lat: 22.7172, lng: 75.8565 },
      { name: "Airport", lat: 22.7278, lng: 75.8011 }
    ];

    function getDistance(lat1, lon1, lat2, lon2) {
      const R = 6371;
      const dLat = (lat2 - lat1) * Math.PI / 180;
      const dLon = (lon2 - lon1) * Math.PI / 180;
      const a =
        Math.sin(dLat / 2) ** 2 +
        Math.cos(lat1 * Math.PI / 180) *
        Math.cos(lat2 * Math.PI / 180) *
        Math.sin(dLon / 2) ** 2;
      return R * 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
    }

    document.getElementById("checkSafeBtn").addEventListener("click", () => {
      const result = document.getElementById("safeResult");

      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(
          (pos) => {
            const lat = pos.coords.latitude;
            const lng = pos.coords.longitude;

            document.getElementById("lat").value = lat;
            document.getElementById("lng").value = lng;

            let safe = false;
            let safePlace = "";
            for (const loc of safeLocations) {
              const dist = getDistance(lat, lng, loc.lat, loc.lng);
              if (dist <= 0.5) { // within 500m
                safe = true;
                safePlace = loc.name;
                break;
              }
            }

            console.log("Safe check:", lat, lng);

            result.textContent = safe
              ? `You are in a safe location: ${safePlace}`
              : "You are NOT in a safe zone!";
          },
          () => {
            result.textContent = "Could not fetch location. Please enable GPS.";
          }
        );
      } else {
        result.textContent = "Geolocation not supported in this browser.";
      }
    });
  </script>
</body>
</html>
